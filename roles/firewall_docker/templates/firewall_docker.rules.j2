*filter

# Default policies
:INPUT {{ 'DROP' if fw_rules.block_inbound | default(false) else 'ACCEPT' }} [0:0]
:FORWARD DROP [0:0]
:OUTPUT {{ 'DROP' if fw_rules.block_outbound | default(false) else 'ACCEPT' }} [0:0]

# Loopback
-A INPUT -i lo -j ACCEPT

# Established/related
-A INPUT -m conntrack --ctstate ESTABLISHED,RELATED -j ACCEPT

# SSH
-A INPUT -p tcp --dport 22 -j ACCEPT

# DOCKER-USER chain
:DOCKER-USER - [0:0]

# Flush and allow container rules
{% for rule in fw_rules.inbound | default([]) %}
-A DOCKER-USER -p {{ rule.proto }} {% if rule.source is defined %}-s {{ rule.source }}{% endif %} --dport {{ rule.dport }} -j {{ rule.jump }}
{% endfor %}

# Established traffic in DOCKER-USER
-A DOCKER-USER -m conntrack --ctstate ESTABLISHED,RELATED -j ACCEPT

# Drop or RETURN
{% if fw_rules.block_inbound | default(false) %}
-A DOCKER-USER -j DROP
{% else %}
-A DOCKER-USER -j RETURN
{% endif %}

# Outbound rules
{% for rule in fw_rules.outbound | default([]) %}
-A OUTPUT -p {{ rule.proto }} {% if rule.destination is defined %}-d {{ rule.destination }}{% endif %} --dport {{ rule.dport }} -j {{ rule.jump }}
{% endfor %}

COMMIT
